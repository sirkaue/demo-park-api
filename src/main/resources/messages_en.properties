# ClienteCreateDto
NotBlank.clienteCreateDto.nome=Name cannot be null or blank.
Size.clienteCreateDto.nome=Name size must be between {1} and {2} characters.
CPF.clienteCreateDto.cpf=CPF cannot be null or blank.
Size.clienteCreateDto.cpf=CPF size must be between {1} and {2} characters.

# EstacionamentoCreateDto
NotBlank.estacionamentoCreateDto.placa=License plate cannot be null or blank.
Size.estacionamentoCreateDto.placa=License plate size must be between {1} and {2} characters.
Pattern.estacionamentoCreateDto.placa=The vehicle's license plate must follow the pattern 'AAA-0000'.
NotBlank.estacionamentoCreateDto.marca=Brand cannot be null or blank.
NotBlank.estacionamentoCreateDto.modelo=Model cannot be null or blank.
NotBlank.estacionamentoCreateDto.cor=Color cannot be null or blank.
NotBlank.estacionamentoCreateDto.clienteCpf=Customer CPF cannot be null or blank.
Size.estacionamentoCreateDto.clienteCpf=Customer CPF size must be between {1} and {2} characters.
CPF.estacionamentoCreateDto.clienteCpf=CPF cannot be null or blank.

# UsuarioCreateDto
NotBlank.usuarioCreateDto.username=E-mail cannot be null or blank.
Email.usuarioCreateDto.username=Invalid e-mail format.
NotBlank.usuarioCreateDto.password=Password cannot be null or blank.
Size.usuarioCreateDto.password=Password size must be between {1} and {2} characters.

# UsuarioLoginDto
NotBlank.usuarioLoginDto.username=E-mail cannot be null or blank.
Email.usuarioLoginDto.username=Invalid e-mail format.
NotBlank.usuarioLoginDto.password=Password cannot be null or blank.
Size.usuarioLoginDto.password=Password size must be between {1} and {2} characters.

# UsuarioSenhaDto
NotBlank.usuarioSenhaDto.senhaAtual=Current password cannot be null or blank.
Size.usuarioSenhaDto.senhaAtual=Password size must be between {1} and {2} characters.
NotBlank.usuarioSenhaDto.novaSenha=New password cannot be null or blank.
Size.usuarioSenhaDto.novaSenha=Password size must be between {1} and {2} characters.
NotBlank.usuarioSenhaDto.confirmaSenha=Password confirmation cannot be null or blank.
Size.usuarioSenhaDto.confirmaSenha=Password confirmation size must be between {1} and {2} characters.

# VagaCreateDto
NotBlank.vagaCreateDto.codigo=Code cannot be null or blank.
Size.vagaCreateDto.codigo=Code size must be between {1} and {2} characters.
NotBlank.vagaCreateDto.status=Status cannot be null or blank.
Pattern.vagaCreateDto.status=Status must be 'LIVRE' or 'OCUPADA'.

# ClienteService Exceptions
exception.CpfUniqueViolationException={0} ''{1}'' cannot be registered, it already exists in the system.
exception.ClienteNotFoundException=Customer ''id={0}'' not found in the system.
exception.ClienteCpfNotFoundException=Error during check-in, customer with {0} ''{1}'' not found in the system.
exception.UsernameUniqueViolationException=Registration error, {0} ''{1}'' is already registered in the system.

# ClienteVagaService Exceptions
exception.ReciboEntityNotFoundException=Receipt ''{0}'' not found in the system or check-out already completed.

# UsuarioService Exceptions
exception.UsuarioNotFoundException=User ''id={0}'' not found.
exception.PasswordInvalidException.confirmation=New password does not match confirmation password.
exception.PasswordInvalidException.current=Your password does not match.
exception.PasswordInvalidException.same=New password cannot be the same as the current password.
exception.UsernameNotFoundException=User with ''username={0}'' not found.
exception.UsernameUniqueViolationException.alternative=Registration failed, an account with \
  e-mail ''{0}'' already exists.

# VagaService Exceptions
exception.CodigoUniqueViolationException=Parking spot with code ''{0}'' is already registered.
exception.VagaNotFoundException=Unable to find parking spot with value ''{0}''.
exception.VagaIndisponivelException=No available parking spots found.

message.invalid.field=Invalid fields.
message.invalid.credential=Invalid credentials.
